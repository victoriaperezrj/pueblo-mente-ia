/* index.css — Tailwind + Efectos "chetos" */
/* ---------------------------------------------------
   Requisitos: Tailwind debe estar configurado (postcss/vite).
   Importa este archivo en tu entrypoint: import './index.css'
   --------------------------------------------------- */

@tailwind base;
@tailwind components;
@tailwind utilities;

/* ===========================
   Variables globales
   =========================== */
:root {
  --bg-1: #0f172a;
  --bg-2: #0b1220;
  --card: 255 255 255;
  --glass-alpha: 0.12;
  --primary: 59 130 246; /* azul */
  --accent: 236 72 153; /* magenta */
  --green: 16 185 129;
  --soft-radius: 1rem;
  --glass-border: rgba(255, 255, 255, 0.08);
  --noise-opacity: 0.04;
  --text-strong: 240 240 245;
}

/* ===========================
   Base + tipografías
   =========================== */
@layer base {
  * {
    box-sizing: border-box;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
  }
  html,
  body,
  #root {
    height: 100%;
  }
  body {
    @apply bg-[radial-gradient(1200px_600px_at_10%_10%,rgba(59,130,246,0.12),transparent 15%),
                 radial-gradient(1000px_500px_at_90%_90%,rgba(236,72,153,0.08),transparent 12%),
                 linear-gradient(180deg,#071022 0%, #081022 100%)]
           text-white;
    font-family:
      Inter,
      ui-sans-serif,
      system-ui,
      -apple-system,
      "SF Pro Text",
      "Helvetica Neue",
      Arial;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    line-height: 1.45;
  }

  h1,
  h2,
  h3,
  h4 {
    letter-spacing: -0.02em;
    font-weight: 800;
  }
  p,
  span,
  a {
    color: rgb(var(--text-strong));
  }
}

/* ===========================
   Gradient loops (aurora-like)
   =========================== */
@keyframes gradient-loop {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.gradient-loop {
  background: linear-gradient(270deg, rgba(59, 130, 246, 0.95), rgba(236, 72, 153, 0.9), rgba(16, 185, 129, 0.85));
  background-size: 600% 600%;
  animation: gradient-loop 18s ease-in-out infinite;
}

/* ===========================
   Noise texture (sutil)
   =========================== */
.noise {
  background-image:
    radial-gradient(circle at 25% 25%, rgba(255, 255, 255, var(--noise-opacity)), transparent 2px),
    radial-gradient(circle at 75% 75%, rgba(255, 255, 255, var(--noise-opacity)), transparent 2px);
  background-size:
    6px 6px,
    7px 7px;
  mix-blend-mode: overlay;
  pointer-events: none;
}

/* ===========================
   Partículas / polvo digital (CSS-only)
   - insertá <div class="particles pointer-events-none"> en tu hero
   =========================== */
.particles {
  position: absolute;
  inset: 0;
  overflow: hidden;
  z-index: 0;
}
.particles::before,
.particles::after {
  content: "";
  position: absolute;
  width: 200%;
  height: 200%;
  left: -50%;
  top: -50%;
  background-image: radial-gradient(circle, rgba(255, 255, 255, 0.08) 1px, transparent 1px);
  opacity: 0.06;
  filter: blur(10px);
  animation: slow-rotate 40s linear infinite;
}
.particles::after {
  transform: translateY(20%) scale(0.7);
  opacity: 0.04;
  animation-duration: 60s;
}
@keyframes slow-rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* ===========================
   Blob morphing (CSS blobs)
   - colocá varios <div class="blob blob-1"></div>
   =========================== */
.blob {
  position: absolute;
  filter: blur(18px) saturate(120%);
  opacity: 0.9;
  mix-blend-mode: screen;
  transform-origin: center;
}
.blob-1 {
  width: 420px;
  height: 420px;
  left: -8%;
  top: 10%;
  background: radial-gradient(
    circle at 20% 20%,
    rgba(59, 130, 246, 0.95),
    rgba(59, 130, 246, 0.45) 40%,
    transparent 60%
  );
  border-radius: 42% 58% 38% 62% / 45% 55% 52% 48%;
  animation: blob-morph-1 14s infinite linear;
}
.blob-2 {
  width: 520px;
  height: 520px;
  right: -12%;
  bottom: -6%;
  background: radial-gradient(
    circle at 80% 80%,
    rgba(236, 72, 153, 0.85),
    rgba(236, 72, 153, 0.45) 35%,
    transparent 65%
  );
  border-radius: 40% 60% 60% 40% / 55% 45% 55% 45%;
  animation: blob-morph-2 18s infinite linear;
  opacity: 0.9;
}
@keyframes blob-morph-1 {
  0% {
    border-radius: 42% 58% 38% 62% / 45% 55% 52% 48%;
    transform: scale(1) translate(0, 0) rotate(0deg);
  }
  50% {
    border-radius: 55% 45% 60% 40% / 40% 60% 38% 62%;
    transform: scale(1.08) translate(8px, -12px) rotate(4deg);
  }
  100% {
    border-radius: 42% 58% 38% 62% / 45% 55% 52% 48%;
    transform: scale(1) translate(0, 0) rotate(0deg);
  }
}
@keyframes blob-morph-2 {
  0% {
    border-radius: 40% 60% 60% 40% / 55% 45% 55% 45%;
    transform: scale(1) rotate(0deg) translate(0, 0);
  }
  50% {
    border-radius: 60% 40% 45% 55% / 50% 50% 40% 60%;
    transform: scale(0.95) rotate(-3deg) translate(-12px, 8px);
  }
  100% {
    border-radius: 40% 60% 60% 40% / 55% 45% 55% 45%;
    transform: scale(1) rotate(0deg) translate(0, 0);
  }
}

/* ===========================
   Glassmorphism (tarjetas y overlays)
   =========================== */
.glass {
  background: linear-gradient(180deg, rgba(255, 255, 255, var(--glass-alpha)), rgba(255, 255, 255, 0.03));
  backdrop-filter: blur(10px) saturate(120%);
  -webkit-backdrop-filter: blur(10px) saturate(120%);
  border: 1px solid var(--glass-border);
  border-radius: var(--soft-radius);
  box-shadow:
    0 8px 30px rgba(2, 6, 23, 0.6),
    inset 0 1px 0 rgba(255, 255, 255, 0.03);
}

/* ===========================
   Claymorphism helpers (botones / cards estilo plastilina)
   =========================== */
.clay {
  border-radius: 20px;
  background: linear-gradient(180deg, rgba(255, 255, 255, 0.02), rgba(0, 0, 0, 0.08));
  box-shadow:
    8px 14px 28px rgba(2, 6, 23, 0.45),
    -8px -6px 20px rgba(255, 255, 255, 0.02);
  padding: 1rem;
}

/* ===========================
   Typografía animada
   =========================== */
/* shimmer */
.text-shimmer {
  position: relative;
  display: inline-block;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-image: linear-gradient(
    90deg,
    rgba(255, 255, 255, 0.85),
    rgba(255, 255, 255, 0.2),
    rgba(255, 255, 255, 0.85)
  );
  background-size: 200% 100%;
  animation: text-shimmer 3s linear infinite;
}
@keyframes text-shimmer {
  0% {
    background-position: -150% 0;
  }
  100% {
    background-position: 150% 0;
  }
}

/* typewriter - usa en <h1 class="typewriter"><span>Texto aqui</span></h1> */
.typewriter {
  overflow: hidden;
  white-space: nowrap;
  display: inline-block;
  border-right: 0.12em solid rgba(255, 255, 255, 0.6);
}
.typewriter span {
  display: inline-block;
  animation:
    typing 2.6s steps(40, end) 1,
    blink 0.8s step-end infinite;
}
@keyframes typing {
  from {
    width: 0;
  }
  to {
    width: 100%;
  }
}
@keyframes blink {
  50% {
    border-color: transparent;
  }
}

/* text cascade (por palabra) - añadí delay inline con style={{animationDelay:'0.1s'}} en cada span */
.text-cascade span {
  opacity: 0;
  transform: translateY(8px);
  display: inline-block;
  animation: cascade 0.45s forwards;
}
@keyframes cascade {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* ===========================
   Reveal / scroll helpers
   =========================== */
.scroll-fade-in {
  opacity: 0;
  transform: translateY(18px);
  transition: all 0.6s cubic-bezier(0.2, 0.9, 0.2, 1);
}
.scroll-fade-in.visible {
  opacity: 1;
  transform: translateY(0);
}

/* sticky transitions helper */
.sticky-transition {
  position: sticky;
  top: 0;
  transition: all 300ms ease;
}

/* ===========================
   Microinteractions y hover magic
   =========================== */
.button-magnetic {
  transition:
    transform 260ms cubic-bezier(0.2, 0.9, 0.2, 1),
    box-shadow 260ms;
  will-change: transform;
}
.button-magnetic:hover {
  transform: translateY(-6px) scale(1.02);
  box-shadow: 0 12px 30px rgba(2, 6, 23, 0.5);
}

/* tilt 3D on parent .tilt-container */
.tilt-container {
  perspective: 1200px;
}
.tilt-card {
  transform-style: preserve-3d;
  transition: transform 300ms ease;
  will-change: transform;
}
.tilt-container:hover .tilt-card {
  transform: rotateX(3deg) rotateY(-6deg) translateZ(6px);
}

/* glow pulse */
.glow-pulse {
  box-shadow: 0 0 0 rgba(0, 0, 0, 0);
  animation: glow-pulse 2.8s infinite;
}
@keyframes glow-pulse {
  0% {
    box-shadow: 0 0 0 rgba(59, 130, 246, 0.12);
  }
  50% {
    box-shadow: 0 16px 40px rgba(59, 130, 246, 0.06);
  }
  100% {
    box-shadow: 0 0 0 rgba(59, 130, 246, 0);
  }
}

/* ripple (click) — requires adding .ripple to button and a little JS to toggle .ripple-animate; fallback visual provided */
.ripple {
  position: relative;
  overflow: hidden;
}
.ripple::after {
  content: "";
  position: absolute;
  left: 50%;
  top: 50%;
  width: 0;
  height: 0;
  background: radial-gradient(circle, rgba(255, 255, 255, 0.18) 10%, transparent 10.01%);
  transform: translate(-50%, -50%);
  transition:
    width 0.6s ease,
    height 0.6s ease,
    opacity 0.8s ease;
  opacity: 0;
  border-radius: 50%;
}
.ripple.ripple-animate::after {
  width: 300px;
  height: 300px;
  opacity: 1;
  transition:
    width 0.6s ease,
    height 0.6s ease,
    opacity 0.3s ease;
}

/* magnetic cursor follow (CSS-only visual trick on hover) */
.magnetic {
  transition: transform 220ms cubic-bezier(0.2, 0.9, 0.2, 1);
}
.magnetic:hover {
  transform: translateY(-6px) scale(1.03);
}

/* ===========================
   Loaders & skeletons
   =========================== */
.skeleton {
  background: linear-gradient(90deg, rgba(255, 255, 255, 0.04), rgba(255, 255, 255, 0.08), rgba(255, 255, 255, 0.04));
  background-size: 200% 100%;
  animation: skeleton-shimmer 1.2s linear infinite;
  border-radius: 0.5rem;
  min-height: 16px;
}
@keyframes skeleton-shimmer {
  from {
    background-position: 200% 0;
  }
  to {
    background-position: -200% 0;
  }
}

.liquid-loader {
  width: 64px;
  height: 64px;
  border-radius: 50%;
  position: relative;
  overflow: hidden;
  background: radial-gradient(circle at 30% 30%, rgba(255, 255, 255, 0.08), transparent 25%);
  box-shadow: inset 0 -8px 20px rgba(0, 0, 0, 0.4);
}
.liquid-loader::before {
  content: "";
  position: absolute;
  left: -50%;
  top: 40%;
  width: 200%;
  height: 120%;
  background: linear-gradient(90deg, rgba(59, 130, 246, 0.7), rgba(236, 72, 153, 0.7), rgba(16, 185, 129, 0.6));
  transform: rotate(-10deg);
  animation: liquid-wave 1.8s ease-in-out infinite;
}
@keyframes liquid-wave {
  0% {
    transform: translateX(-60%) rotate(-10deg);
  }
  50% {
    transform: translateX(0%) rotate(-12deg);
  }
  100% {
    transform: translateX(-60%) rotate(-10deg);
  }
}

/* ===========================
   Parallax helpers (CSS only)
   - add data-speed attr and control transform via JS; here helper classes for manual use
   =========================== */
.parallax-slow {
  transform: translateY(-8px);
  transition: transform 0.2s linear;
}
.parallax-medium {
  transform: translateY(-18px);
  transition: transform 0.2s linear;
}

/* ===========================
   Utility pretties
   =========================== */
.btn-primary-glow {
  padding: 0.85rem 1.6rem;
  border-radius: 0.9rem;
  font-weight: 700;
  background: linear-gradient(135deg, rgba(59, 130, 246, 1), rgba(99, 102, 241, 0.95));
  box-shadow: 0 10px 30px rgba(59, 130, 246, 0.14);
  transition:
    transform 0.18s ease,
    box-shadow 0.18s ease;
}
.btn-primary-glow:hover {
  transform: translateY(-6px);
  box-shadow: 0 18px 40px rgba(59, 130, 246, 0.22);
}

/* gradient border */
.gradient-border {
  position: relative;
  border-radius: 1rem;
  background-clip: padding-box;
}
.gradient-border::before {
  content: "";
  position: absolute;
  inset: -2px;
  z-index: -1;
  border-radius: inherit;
  background: linear-gradient(90deg, rgba(59, 130, 246, 0.9), rgba(236, 72, 153, 0.9));
  filter: blur(8px);
}

/* ===========================
   Accessibility helpers
   =========================== */
.reduce-motion,
.reduce-motion * {
  animation-duration: 0.001ms !important;
  transition-duration: 0.001ms !important;
  animation-iteration-count: 1 !important;
}

/* ===========================
   Examples of composed sections (copy these blocks into your HTML/TSX)
   ===========================
   - Hero container:
     <section class="relative overflow-hidden min-h-screen">
       <div class="particles"></div>
       <div class="blob blob-1"></div>
       <div class="blob blob-2"></div>
       <div class="container mx-auto relative z-10">
         <h1 class="text-6xl font-black text-shimmer">...</h1>
       </div>
       <div class="noise pointer-events-none"></div>
     </section>

   - Glass CTA:
     <div class="glass p-8 max-w-3xl mx-auto gradient-loop">
       <h2 class="text-3xl font-bold text-shimmer">...</h2>
       <button class="btn-primary-glow">Empezar</button>
     </div>

   - Button with ripple (JS: toggle .ripple-animate quickly on click):
     <button class="ripple btn-primary-glow">Click</button>
   =========================== */
