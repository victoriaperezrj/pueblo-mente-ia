// ============================================
// üìä STAGE CARDS - PROYECTO EMPRENDEDURISMO
// ============================================
// Cards de etapas con dise√±o clean y profesional
// Compatible con Lovable (React + Framer Motion)
// ============================================

import { motion } from 'framer-motion';
import { Sparkles, TrendingUp, Building2, CheckCircle2 } from 'lucide-react';

const StageCards = () => {
  const stages = [
    {
      id: 'emprendedor',
      title: 'Emprendedor',
      subtitle: 'DESDE CERO',
      description: '¬øTen√©s una idea pero no sab√©s si funciona?',
      icon: Sparkles,
      iconBg: 'from-blue-500 to-cyan-500',
      buttonBg: 'from-blue-600 to-cyan-600',
      features: [
        'Valid√° con IA en minutos',
        'Ves n√∫meros reales',
        'Entend√© viabilidad'
      ],
      buttonText: 'Validar idea',
      popular: false,
    },
    {
      id: 'negocio',
      title: 'Negocio',
      subtitle: '1-3 A√ëOS',
      description: 'Vend√©s, pero todo a mano. Necesit√°s ordenar y crecer.',
      icon: TrendingUp,
      iconBg: 'from-purple-500 to-pink-500',
      buttonBg: 'from-purple-600 to-pink-600',
      features: [
        'Dashboard real-time',
        'CRM + Ventas + Gastos',
        'Control sin planillas'
      ],
      buttonText: 'Organizar negocio',
      popular: true,
    },
    {
      id: 'empresa',
      title: 'Empresa',
      subtitle: '+3 A√ëOS',
      description: 'Tu empresa creci√≥. Automatiz√° y escal√° con IA.',
      icon: Building2,
      iconBg: 'from-emerald-500 to-teal-500',
      buttonBg: 'from-emerald-600 to-teal-600',
      features: [
        'Multi-sucursal',
        'Gesti√≥n de equipo',
        'Automatizaci√≥n con IA'
      ],
      buttonText: 'Automatizar empresa',
      popular: false,
    },
  ];
  
  return (
    <section className="relative py-24 px-6 bg-gradient-to-b from-transparent via-slate-900/20 to-transparent">
      <div className="max-w-7xl mx-auto">
        {/* T√≠tulo de secci√≥n */}
        <motion.div
          initial={{ opacity: 0, y: 30 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true, margin: "-100px" }}
          transition={{ duration: 0.7 }}
          className="text-center mb-16"
        >
          <h2 className="text-4xl md:text-5xl font-extrabold mb-4">
            ¬øEn qu√©{' '}
            <span className="bg-gradient-to-r from-blue-400 via-purple-400 to-emerald-400 bg-clip-text text-transparent">
              etapa
            </span>
            {' '}est√°s?
          </h2>
          <p className="text-white/60 text-lg max-w-2xl mx-auto">
            Eleg√≠ tu ruta y acced√© a herramientas dise√±adas espec√≠ficamente para ti
          </p>
        </motion.div>
        
        {/* Grid de cards */}
        <div className="grid md:grid-cols-3 gap-6 mb-12">
          {stages.map((stage, index) => (
            <motion.div
              key={stage.id}
              initial={{ opacity: 0, y: 40 }}
              whileInView={{ opacity: 1, y: 0 }}
              viewport={{ once: true, margin: "-100px" }}
              transition={{ 
                delay: index * 0.15, 
                duration: 0.6,
                ease: [0.22, 1, 0.36, 1]
              }}
              whileHover={{ y: -10, scale: 1.02 }}
              className="relative group"
            >
              {/* Badge "M√°s usado" */}
              {stage.popular && (
                <motion.div
                  initial={{ opacity: 0, y: -10 }}
                  animate={{ opacity: 1, y: 0 }}
                  transition={{ delay: 0.5 + index * 0.15, duration: 0.5 }}
                  className="absolute -top-3 left-1/2 -translate-x-1/2 z-20"
                >
                  <div className="px-4 py-1.5 rounded-full bg-gradient-to-r from-amber-500 to-orange-500 
                                  text-xs font-bold text-white shadow-lg">
                    M√ÅS USADO
                  </div>
                </motion.div>
              )}
              
              <div className={`relative h-full p-8 rounded-2xl backdrop-blur-xl 
                              bg-white/[0.04] hover:bg-white/[0.08] 
                              border border-white/10 hover:border-white/20
                              transition-all duration-500
                              ${stage.popular ? 'ring-1 ring-amber-500/30' : ''}`}>
                
                {/* Glow effect sutil */}
                <div className={`absolute inset-0 rounded-2xl bg-gradient-to-br ${stage.iconBg} 
                                opacity-0 group-hover:opacity-5 transition-opacity duration-500 blur-2xl -z-10`} />
                
                {/* Contenido */}
                <div className="relative z-10">
                  {/* Icono con gradient */}
                  <motion.div
                    whileHover={{ scale: 1.1, rotate: 5 }}
                    transition={{ type: "spring", stiffness: 400, damping: 10 }}
                    className={`w-14 h-14 rounded-xl bg-gradient-to-br ${stage.iconBg} 
                              p-0.5 mb-6 shadow-lg`}
                  >
                    <div className="w-full h-full rounded-xl bg-slate-900 flex items-center justify-center">
                      <stage.icon className="w-7 h-7 text-white" />
                    </div>
                  </motion.div>
                  
                  {/* Badge de subt√≠tulo */}
                  <div className={`inline-block px-3 py-1 rounded-full text-xs font-bold mb-3
                                  bg-gradient-to-r ${stage.iconBg} text-white`}>
                    {stage.subtitle}
                  </div>
                  
                  {/* T√≠tulo */}
                  <h3 className="text-2xl font-bold text-white mb-3">
                    {stage.title}
                  </h3>
                  
                  {/* Descripci√≥n */}
                  <p className="text-white/60 mb-6 leading-relaxed min-h-[48px]">
                    {stage.description}
                  </p>
                  
                  {/* Features */}
                  <ul className="space-y-2.5 mb-8">
                    {stage.features.map((feature, i) => (
                      <motion.li
                        key={i}
                        initial={{ opacity: 0, x: -10 }}
                        whileInView={{ opacity: 1, x: 0 }}
                        viewport={{ once: true }}
                        transition={{ delay: 0.6 + index * 0.15 + i * 0.1, duration: 0.4 }}
                        className="flex items-start gap-2.5 text-sm text-white/70"
                      >
                        <CheckCircle2 className="w-4 h-4 mt-0.5 text-emerald-400 flex-shrink-0" />
                        {feature}
                      </motion.li>
                    ))}
                  </ul>
                  
                  {/* CTA Button */}
                  <motion.button
                    whileHover={{ scale: 1.03 }}
                    whileTap={{ scale: 0.98 }}
                    className={`w-full py-3.5 rounded-xl font-semibold text-white
                              bg-gradient-to-r ${stage.buttonBg} 
                              shadow-lg hover:shadow-xl
                              transition-all duration-300 
                              flex items-center justify-center gap-2 group/btn`}
                  >
                    {stage.buttonText}
                    <svg 
                      className="w-4 h-4 group-hover/btn:translate-x-1 transition-transform" 
                      fill="none" 
                      viewBox="0 0 24 24" 
                      stroke="currentColor"
                    >
                      <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M9 5l7 7-7 7" />
                    </svg>
                  </motion.button>
                </div>
              </div>
            </motion.div>
          ))}
        </div>
        
        {/* CTA inferior con IA */}
        <motion.div
          initial={{ opacity: 0, y: 20 }}
          whileInView={{ opacity: 1, y: 0 }}
          viewport={{ once: true }}
          transition={{ delay: 0.5, duration: 0.6 }}
          className="text-center"
        >
          <p className="text-white/60 mb-4 text-sm">¬øNo est√°s seguro de tu etapa?</p>
          <motion.button
            whileHover={{ scale: 1.05 }}
            whileTap={{ scale: 0.98 }}
            className="px-8 py-3.5 rounded-xl bg-white/[0.06] backdrop-blur-sm border border-white/20
                       font-semibold text-white hover:bg-white/[0.1] hover:border-white/30
                       transition-all duration-300
                       flex items-center gap-2 mx-auto"
          >
            <Sparkles className="w-5 h-5 text-blue-400" />
            Dej√° que la IA te ayude a elegir
          </motion.button>
        </motion.div>
      </div>
    </section>
  );
};

export default StageCards;
